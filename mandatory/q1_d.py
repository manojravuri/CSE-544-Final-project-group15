# -*- coding: utf-8 -*-
"""Probstat_q4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1d_qTsLoITAhXX_cdkxLFIcZStVJS2iI8
"""


import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from scipy.stats import gamma



def plot_gamma_distribution(posteriors):
  for posterior in posteriors:
    alpha=posterior[0]
    beta=posterior[1]
    x = np.linspace(gamma.ppf(0.01, alpha),gamma.ppf(0.99, alpha), 100)
    y1 = gamma.pdf(x, a=alpha)
    plt.plot(x, y1)
  plt.show()

def get_new_params(prior_alpha,prior_beta,x):
  print("x",x)
  posterior_alpha=prior_alpha+1+np.sum(x)
  posterior_beta=prior_beta+x.size
  print("Posterior alpha",posterior_alpha)
  print("Posterior beta",posterior_beta)
  return posterior_alpha,posterior_beta

def plot_posteriors_for_distribution(x):
  prior_alpha=0
  prior_beta=1/np.mean(x[0:28])
  posteriors=[]

  for i in range(4):
    posterior_alpha,posterior_beta=get_new_params(prior_alpha,prior_beta,x[28+(i*7):28+((i+1)*7)])
    posterior=[posterior_alpha,posterior_beta]
    posteriors.append(posterior)
    prior_alpha,prior_beta=posterior_alpha,posterior_beta
  return posteriors


def q1_d():
    dataframe = pd.read_csv('../15_updated.csv')
    ne_deaths = dataframe['ne_deaths_per_day'].to_numpy()
    nd_deaths = dataframe['nd_deaths_per_day'].to_numpy()

    print("ne_deaths", ne_deaths[131:187])
    print("nd_deaths", nd_deaths[131:187])
    total_deaths = ne_deaths[131:187] + nd_deaths[131:187]
    print("total_deaths", total_deaths)

    posteriors = plot_posteriors_for_distribution(total_deaths)
    print("posteriors", posteriors)
    plot_gamma_distribution(posteriors)



q1_d()
